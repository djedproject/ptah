from pyramid.config import Configurator
from pyramid.asset import abspath_from_asset_spec
from pyramid.authentication import AuthTktAuthenticationPolicy
from pyramid.session import UnencryptedCookieSessionFactoryConfig

auth_policy = AuthTktAuthenticationPolicy('secret')
session_factory = UnencryptedCookieSessionFactoryConfig('secret')

def main(global_config, **settings):
    """ Function which returns a configured Pyramid/Ptah WSIG Application """
    
    # Info: This is how Pyramid is configured.    
    config = Configurator(settings=settings,
                          session_factory = session_factory,
                          authentication_policy = auth_policy)
                          
    # Info: This includes packages which have Pyramid configuration          
    config.include('ptah')
    config.include('pyramid_tm')

    # Info: create SQL engine from our settings file; add engine to application
    import sqlahelper, sqlalchemy
    engine = sqlalchemy.engine_from_config(settings, 'sqlalchemy.')
    sqlahelper.add_engine(engine)
    
    # Refer: Ptah: _Initialization_
    config.ptah_initialize(('{{package}}', 'ptah'))
    config.commit()

    # Refer: SQLAlchemy _Declarative_
    Base = sqlahelper.get_base()
    Base.metadata.create_all()

    # Refer: Pyramid's _URL Dispatch_
    config.add_route('home', '/')

    # Refer: Pyramid's _Configuration Decorations and Code Scanning_
    config.scan()

    return config.make_wsgi_app()