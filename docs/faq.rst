Ptah Q & A
==========

What is scope of Ptah?
----------------------

Ptah aims to provide a framework which makes low level choices for developers so the programmer can get on with solving their problem on a unrealistic deadline.  ptah.cms is a API it is not a CMS, Ptah will not have advanced CMS functionality such as staging, workflow or versioning; those will be optional and if support is required in the core data model and reassured you will not have to pay for those features.

Ptah is a framework, an implementation and set of opinions around the Pyramid web framework.  It supports `URL dispatch`, `Traversal`, a SQL data model, pyramid view-level security, content heirarchy, multiple applications living in the same content heirarchy, a high level security policy (permissions, roles, and principals).

Where does Pyramid and Ptah differ?
-----------------------------------

Ptah attempts to provide a "full stack" on top of Pyramid whereas Pyramid urges you to find and use individual libraries.  
 
Will Ptah and Pyramid merge functionality?
------------------------------------------

Probably.  Ptah is very new and once functionality is understood by both communities merging code is good possibility.  Some useful reusable subsystems in Ptah are ptah.view, ptah.config, ptah.config.settings systems.  Not surprsingly Ptah's subsystems are higher level than Pyramids - Ptah started off being an application not a library.

Why does Ptah not use deform?
-----------------------------

Because we do not use colander for form schema. 

Why does Ptah use a Folder paradigm?
------------------------------------

Ptah *does not* require a Folder paradigm or containment.  `examples/ptah_minicms` demonstrates the features of ptah.cms and one of those features are content hierarchies.  Thus the Page/Folder experience in ptah.cmsapp.  We currently have a Poll add-on which does not participate in Page/Folder heirarchy.

Why does Ptah use sqlite?
-------------------------

Ptah uses SQLAlchemy which supports many different database drivers.  sqlite ships with Python obviating the need to install a separate database daemon.  ptah.cms will not depend on database specific features to gain performance or scalability.

SQLAlchemy is Complex and Scary
-------------------------------

SQLAlchemy is a comprehensive library and an effect of that is it can feel overwhelming when reviewing the documentation.  You do not need to understand SQLAlchemy deeply is use Ptah.  The models that you write will most likely be simple and you will need to add behavior to them.  We believe 99% of developers will never have to learn anything deep SQLAlchemy voodoo.

I hate traversal, why would I use Ptah?
---------------------------------------

You do not need to use traversal/containment with Ptah.  You can still use nearly all of ptah.cms.  Containment is a useful concept and it is how many users think about website management.  After all Apache uses containment; instead of a database it uses a filesystem.

Getting a pkg_resources.DistributionNotFound: myapp Exception
-------------------------------------------------------------

This means that you did not run ``python setup.py develop`` on your package.  This is Python and you need to add your
package to the python path/virtual environment. e.g.::

  $ bin/pcreate -t template mypackage
  $ cd mypackage
  $ ../bin/python setup.py develop
  $ ../bin/pserve settings.ini

Where did Paster Go?
--------------------

ptah 0.1 used Pyramid 1.2 and Paster.  Pyramid 1.3 removed the dependency on Paster and rolled the functionality
directly into the pyramid framework.  pcreate and pserver are scripts which are now generated by Pyramid.
